# Fresnel reflectivity from an air-water interface
# def kn(q, sld_layer, sld_fronting):
#     # wave vector in a given layer
#     kvec = np.zeros_like(q, np.complex128)
#     sld = complex(sld_layer - sld_fronting) * 1.e-6
#     kvec[:] = np.sqrt(q[:] ** 2. / 4. -
#                       4. * np.pi * sld)
#     return kvec
#
# q = np.linspace(0.005, 1.0, 1001)
#
# sld1 = 0
# sld2 = 6.36
# roughness = 3
#
# # first principles calcn
# kf = kn(q, sld1, sld1)
# kb = kn(q, sld2, sld1)
# reflectance = (kf - kb) / (kf + kb)
# # roughness
# reflectance *= np.exp(-2. * kf * kb * roughness ** 2)
#
# reflectivity = reflectance * np.conj(reflectance)
# reflectivity = reflectivity.real
layers/test2.layers
data/test2.dat
